# CÃ³digo em C

# int main()
# {
# unsigned int n;
# scanf("%u", &n);

# int numbers[n];
# for (int i = 0; i < n; i++)
# {
# scanf("%d", &numbers[i]);
# }

# int max = numbers[0];
# for (int i = 1; i < n; i++)
# {
# if (numbers[i] > max)
# {
# max = numbers[i];
# }
# }

# printf("%d", max);

# return 0;
# }

# # n = $s0; max = $a0; i = $t0

.data
endl: .asciiz "\n"

.text
main:

# read n and store it in $s0
    li      $v0,                5
    syscall 
    move    $s0,                $v0

# read n numbers and store them in $s1 array
    li      $t0,                0                           # $i = 0

readNumbersLoop:
    bge     $t0,                $s0,    endReadNumbersLoop  # if i >= n, jump to endReadNumbersLoop

    li      $v0,                5
    syscall                                                 # read a number and store it in $v0

    bne     $t0,                $zero,  jumpLine            # if i != 0, jump the next line
    move    $a0,                $v0                         # max = $v0
jumpLine:

    bge     $a0,                $v0,    jumpLine2           # if max >= $v0, jump the nextLine
    move    $a0,                $v0                         # max = $v0
jumpLine2:

    addi    $t0,                $t0,    1                   # i++
    j       readNumbersLoop                                 # jump to readNumbersLoop

endReadNumbersLoop:

    li      $v0,                1
    syscall                                                 # print the max value

    li      $v0,                4
    la      $a0,                endl
    syscall                                                 # print a new line

# end of program
    li      $v0,                10
    syscall 
